#!/bin/sh

# Get list of staged TypeScript/JavaScript files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$')

# Export mocks documentation
echo "üìù Exporting mock API documentation..."
yarn export-mocks

# Check if mock docs changed
if git diff --quiet docs/mocks/; then
  echo "‚úÖ Mock docs are up to date"
else
  echo "üìÑ Mock docs updated, staging changes..."
  git add docs/mocks/
fi

# Verify API schemas are in sync with OpenAPI spec
echo ""
echo "üîç Verifying API schemas..."
if yarn verify-schemas; then
  echo "‚úÖ API schemas are in sync"
else
  echo ""
  echo "‚ö†Ô∏è  Schema verification failed (this may be due to API being unavailable)"
  echo "‚ö†Ô∏è  To fix schema mismatch when API is available, run: yarn generate-schemas"
  echo "‚ö†Ô∏è  Allowing commit to proceed..."
fi

# Run Prettier on staged files
if [ -n "$STAGED_FILES" ]; then
  echo ""
  echo "‚ú® Running Prettier..."
  echo "$STAGED_FILES" | xargs npx prettier --write

  # Re-stage formatted files
  echo "$STAGED_FILES" | xargs git add
  echo "‚úÖ Code formatted"
fi

# Run ESLint on staged files
if [ -n "$STAGED_FILES" ]; then
  echo ""
  echo "üîç Running ESLint..."
  if echo "$STAGED_FILES" | xargs npx eslint --no-warn-ignored; then
    echo "‚úÖ Linting passed"
  else
    echo ""
    echo "‚ùå ESLint found errors. Please fix them before committing."
    exit 1
  fi
fi

# Run TypeScript type check
echo ""
echo "üîç Running TypeScript type check..."
if yarn type-check; then
  echo "‚úÖ Type check passed"
else
  echo ""
  echo "‚ùå Type check failed. Please fix TypeScript errors before committing."
  exit 1
fi

exit 0
